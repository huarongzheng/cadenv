#!/bin/bash

source common_function.sh

# verbose option
if [ "$SOURCE_VERBOSE" != "" ]; then
    echo "Info: Sourcing $UTILS_CADENV/removedir"
fi

#########################################################################
##                          sub routines                               ##
#########################################################################
print_help () {
	echo "NAME"
	echo "       removedir - recursively remove sepcified file(folder) under specified path"
	echo "SYNOPSIS"
    echo "       removedir search_path serarch_name [--help] [--noaction]"
    exit 1
}


parse_command () {
    arg_num=0
    for arg_cnt in $(seq 1 $#)
    do
        eval arg=\$$arg_cnt
        case $arg in
        --help|-h|-\?)
            arg_help=$arg_cnt
            print_help
            ;;
        --noaction|-n)
            arg_noaction=$arg_cnt
            flag_noaction="yes"
            ;;
        *)
            if [ $arg_num -eq 0 ]; then
                serarch_path=$arg
            elif [ $arg_num -eq 1 ]; then
                serarch_name=$arg
            else
                print_warning "too much input argument $*: $arg ignored"
            fi
            arg_num=$(expr $argnum + 1)
            ;;
        esac
    done
}


parse_command $*

if [ "$serarch_path" == ""  ]; then
    print_error "please enter a path to serarch from"
    print_help
fi

if [ "$serarch_name" == "" ]; then
    print_error "please enter a file name to serarch for"
    print_help
fi

if [ "$flag_noaction" == "" ]; then
    # one way
    find $serarch_path -name $serarch_name -print0 | xargs -0 rm -rf
    # and another. Refer to man find and its examples section for detail
    #find $serarch_path -name $serarch_name -exec rm -rf '{}' \;
else
    find $serarch_path -name $serarch_name -print0 | xargs -0 ls
    #find $serarch_path -name $serarch_name -exec ls '{}' \;
fi

